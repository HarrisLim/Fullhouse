<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="com.team.station4.map">
		
		<resultMap id="mapResult" type="Build">
			<result property="build_no" column="BUILD_NO" />
			<result property="address" column="ADDRESS"/>
			<result property="buildType" column="BUILDTYPE" />
			<result property="proType" column="PROTYPE" />
			<result property="wholeFloor" column="WHOLEFLOOR" />
			<result property="floor" column="FLOOR" />
			<result property="jArea" column="JAREA" />
			<result property="gArea" column="GAREA" />
			<result property="view_count" column="VIEW_COUNT" />
			<result property="picPath" column="PICPATH" />
			<result property="reservation_time" column="RESERVATION_TIME" />
			<result property="lat" column="LAT" />
			<result property="lng" column="LNG" />
			<result property="roomTitle" column="ROOMTITLE" />
			<result property="explainText" column="EXPLAINTEXT" />
			<result property="privateMemo" column="PRIVATEMEMO" />
			<result property="buildState" column="BUILDSTATE" />
			<result property="bu_rdate" column="BU_RDATE" />
			<result property="st_no" column="ST_NO" />
			<result property="estate_no" column="ESTATE_NO" />
			<result property="mem_no" column="MEM_NO" />
		</resultMap>
		<!-- jsl -->
		<insert id="myInsert" parameterType="Build"> <!-- 로그인 정보가 아직 없으니까 null처리, reservation_time은 방등록할 때 하는 것이 아니라, room.do에서 하는 것이니까 초기값은 null  -->
			insert into BUILDING values (BUILD_NO_SEQ.nextval, #{address}, #{buildType}, #{proType}, #{wholeFloor}, #{floor}, #{jArea}, #{gArea}, 0, #{picPath}, null, #{lat}, #{lng}, #{roomTitle}, #{explainText}, #{privateMemo}, #{buildState}, SYSDATE, null, null, null)
		</insert>
		<select id="myNo" resultType="int">
			select max(build_no) from BUILDING	
		</select>
		<select id="mySelectEstate" resultType="Build" parameterType="Map">
			select * from(select A.*, ROWNUM rn from(select * from BUILDING NATURAL JOIN PRICE where estate_no=#{buildDTO.estate_no} order by BUILD_NO desc)A)where rn between #{start} and #{last}
		</select>
		<select id="mySearchNoSelect" resultType="Build" parameterType="Build">
			select * from(select A.*, ROWNUM rn from(select * from BUILDING NATURAL JOIN PRICE where estate_no=#{buildDTO.estate_no} 
			<choose>
				<when test="theNum != 0">
					and build_no like #{theNum}||'%'
				</when>
			</choose>
			<choose> 
				<when test="buildState == 0">
					and buildState between 1 and 4
				</when>
				<otherwise>
					and buildState=#{buildState}
				</otherwise>
			</choose> 
			order by BUILD_NO desc)A)where rn between #{start} and #{last} 
		</select>
		<select id="mySearchTitleSelect" resultType="Build" parameterType="Build">
			select * from(select A.*, ROWNUM rn from(select * from BUILDING NATURAL JOIN PRICE where estate_no=#{buildDTO.estate_no} and ROOMTITLE like '%'||#{theTitle}||'%'
			<choose> 
				<when test="buildState == 0">
					and buildState between 1 and 4
				</when>
				<otherwise>
					and buildState=#{buildState}
				</otherwise>
			</choose> 
			order by BUILD_NO desc)A)where rn between #{start} and #{last} 
		</select>
		<select id="mySearchMemoSelect" resultType="Build" parameterType="Build">
			select * from(select A.*, ROWNUM rn from(select * from BUILDING NATURAL JOIN PRICE where estate_no=#{buildDTO.estate_no} and PRIVATEMEMO like '%'||#{theMemo}||'%'
			<choose> 
				<when test="buildState == 0">
					and buildState between 1 and 4
				</when>
				<otherwise>
					and buildState=#{buildState}
				</otherwise>
			</choose> 
			order by BUILD_NO desc)A)where rn between #{start} and #{last}
		</select>
		<update id="myUpdatePrivateMemo" parameterType="Map">
			update BUILDING set PRIVATEMEMO=#{privateMemo} where BUILD_NO=#{build_no}
		</update>
		<delete id="myDelete" parameterType="int">
			delete from BUILDING where BUILD_NO=#{build_no}
		</delete>
		<select id="myCountBuild" parameterType="Map" resultType="int">
			select count(*) from BUILDING where estate_no=1
			<choose>
				<when test="buildState == 1">
					AND BUILDSTATE=1
				</when>
				<when test="buildState == 2">
					AND BUILDSTATE=2
				</when>
				<when test="buildState == 3">
					AND BUILDSTATE=3
				</when>
				<when test="buildState == 4">
					AND BUILDSTATE=4
				</when>
			</choose>
			<choose>
				<when test="theNum == 0">
					
				</when>
				<when test="theNum != null and theTitle == null and theMemo == null">
					and build_no like #{theNum}||'%'
				</when>
				<when test="theNum == null and theTitle != null and theMemo == null">
					and ROOMTITLE like '%'||#{theTitle}||'%'
				</when>
				<when test="theNum == null and theTitle == null and theMemo != null">
					and PRIVATEMEMO like '%'||#{theMemo}||'%'
				</when>
			</choose>
		</select>
		
		
		
		<select id="mySelect" parameterType="Map" resultType="Build"> 

			select * from(select A.*, ROWNUM rn from(select * from BUILDING NATURAL JOIN PRICE where LNG between #{west} and #{east} order by BUILD_NO desc)A 
			where LAT between #{south} and #{north}
			<!-- 오피스텔, 아파트, 원룸 등 방 종류 -->
			<if test="proType != null">
				AND  PROTYPE=#{proType}
			</if>
			
			<!-- 매물 종류 -->
			<choose>
			<when test="buildType != null and buildType == '월세' ">
				 AND  BUILDTYPE=1
			</when>
			<when test="buildType != null and buildType == '전세' ">
				 AND  BUILDTYPE=2
			</when>
			<when test="buildType != null and buildType == '매매' ">
				 AND  BUILDTYPE=3
			</when>
			<when test="buildType != null and buildType == '월세or전세' ">
				 AND  BUILDTYPE=4
			</when>
			</choose>
			
			<!-- 거래 종류 -->			
			<choose>
			<when test="kind_of_trade != null and kind_of_trade == '중개' ">
				 AND  ESTATE_NO between 1 and 999999
			</when>
			<when test="kind_of_trade != null and kind_of_trade == '직거래' ">
				 AND  MEM_NO between 1 and 999999
			</when>
			</choose>
			
			<!-- 보증금 -->	
<!-- 			<if test="deposit != null" > -->
<!-- 				AND DEPOSIT between #{} and #{} -->
<!-- 			</if> -->
			
			)where rn between #{start} and #{last}
			
			
		</select>

		<select id="myLocation" resultType="Build">
			select LAT, LNG from BUILDING
		</select>
		
		<select id="myLatLng" parameterType="HashMap" resultType="Build">
			select LAT, LNG from BUILDING where ADDRESS like '%'||#{서울}||'%'
		</select>
		
		<insert id="myInjection" parameterType="Build">
			insert into BUILDING values
			(BUILD_NO_SEQ.nextval, #{address}, #{buildType}, #{proType}, #{wholeFloor}, #{floor}, #{jArea}, #{gArea}, #{view_count}, #{picPath}, 
			#{reservation_time}, #{lat}, #{lng}, #{roomTitle}, #{explainText}, #{privateMemo}, #{buildState}, #{bu_rdate}, #{st_no}, #{estate_no}, null, #{addInfo_no})
		</insert>
		
		<select id="myCountCluster" parameterType="Map" resultType="int" >
			select count(*) from(select * from BUILDING where LNG between #{west} and #{east})A where LAT between #{south} and #{north}
						<!-- 오피스텔, 아파트, 원룸 등 방 종류 -->
			<if test="proType != null">
				AND  PROTYPE=#{proType}
			</if>
			
			<!-- 매물 종류 -->
			<choose>
			<when test="buildType != null and buildType == '월세' ">
				 AND  BUILDTYPE=1
			</when>
			<when test="buildType != null and buildType == '전세' ">
				 AND  BUILDTYPE=2
			</when>
			<when test="buildType != null and buildType == '매매' ">
				 AND  BUILDTYPE=3
			</when>
			<when test="buildType != null and buildType == '월세or전세' ">
				 AND  BUILDTYPE=4
			</when>
			</choose>
			
			<!-- 거래 종류 -->			
			<choose>
			<when test="kind_of_trade != null and kind_of_trade == '중개' ">
				 AND  ESTATE_NO between 1 and 999999
			</when>
			<when test="kind_of_trade != null and kind_of_trade == '직거래' ">
				 AND  MEM_NO between 1 and 999999
			</when>
			</choose>
		</select>

		
		
		<insert id="myInsertPrice" parameterType="HashMap">
			insert into PRICE values(PRICE_NO_SEQ.nextval, #{lease}, null, #{monthly}, #{deposit}, #{build_no})
		</insert>
		
		<select id="myCount" resultType="int">
			select count(*) from BUILDING
		</select>
		

	</mapper>